name: Deploy Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PORT: ${{ secrets.PORT }}
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
  LINE_ACCESS_TOKEN: ${{ secrets.LINE_ACCESS_TOKEN }}
  LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  NODE_ENV: ${{ secrets.NODE_ENV }}

jobs:
  deploy:
    name: Deploy Server
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "LINE_ACCESS_TOKEN=${{ secrets.LINE_ACCESS_TOKEN }}" >> .env
          echo "LINE_CHANNEL_SECRET=${{ secrets.LINE_CHANNEL_SECRET }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
        shell: bash

      - name: Set permissions for .env
        run: chmod +x .env

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: boomtris/boom-tris-hospital-backend:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
